plugins {
    id 'io.micronaut.build.internal.tracing-module'
    id 'com.google.protobuf'
}

dependencies {
    api mn.micronaut.runtime
    api mn.micronaut.http.client
    api mn.micronaut.grpc.server.runtime
    api mn.micronaut.grpc.client.runtime
    api projects.tracingAnnotation
    api projects.tracingCore
    api libs.opentelemetry.api
    api libs.opentelemetry.extension.annotations
    api libs.opentelemetry.instrumentation.api
    api libs.opentelemetry.instrumentation.grpc

    compileOnly libs.kotlinx.coroutines.core
    compileOnly libs.kotlinx.coroutines.reactor

    testImplementation mn.reactor
    testImplementation mn.rxjava2
    api projects.tracingCore
    testImplementation mn.micronaut.reactor.http.client

    testImplementation libs.opentelemetry.sdk
    testImplementation libs.opentelemetry.sdk.testing
    testImplementation libs.opentelemetry.sdk.metrics
    testImplementation libs.opentelemetry.sdk.logs
    testImplementation libs.opentracing.grpc
    testImplementation libs.grpc.protobuf
    testImplementation libs.grpc.stub
    testImplementation libs.awaitility
}

sourceSets {
    test {
        java {
            srcDirs 'build/generated/source/proto/test/grpc'
            srcDirs 'build/generated/source/proto/test/java'
        }
    }
}

protobuf {
    protoc { artifact = libs.protoc.asProvider().get() }
    plugins {
        grpc { artifact = libs.protoc.grpc.get() }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}
